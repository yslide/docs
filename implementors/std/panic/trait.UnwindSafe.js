(function() {var implementors = {};
implementors["libslide"] = [{"text":"impl UnwindSafe for Assignment","synthetic":true,"types":[]},{"text":"impl UnwindSafe for RcExpr","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Stmt","synthetic":true,"types":[]},{"text":"impl UnwindSafe for StmtList","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Span","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ProgramContext","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; UnwindSafe for ParseResult&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl UnwindSafe for EvaluationResult","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Poly","synthetic":true,"types":[]},{"text":"impl UnwindSafe for EmitConfig","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Expr","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ExprPat","synthetic":true,"types":[]},{"text":"impl UnwindSafe for StmtKind","synthetic":true,"types":[]},{"text":"impl UnwindSafe for EmitFormat","synthetic":true,"types":[]},{"text":"impl UnwindSafe for AssociatedDiagnostic","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Diagnostic","synthetic":true,"types":[]},{"text":"impl UnwindSafe for DiagnosticKind","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ScanErrors","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ScanResult","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Token","synthetic":true,"types":[]},{"text":"impl UnwindSafe for TokenType","synthetic":true,"types":[]}];
implementors["slide"] = [{"text":"impl UnwindSafe for Opts","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SlideResult","synthetic":true,"types":[]}];
implementors["slide_ls"] = [{"text":"impl UnwindSafe for ProgramInfo","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for SlideLS","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for ExprFinder&lt;'a&gt;","synthetic":true,"types":[]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()